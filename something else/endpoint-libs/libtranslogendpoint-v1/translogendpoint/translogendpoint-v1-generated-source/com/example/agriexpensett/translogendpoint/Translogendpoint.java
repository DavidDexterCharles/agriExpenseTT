/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-09 17:08:39 UTC)
 * on 2014-07-21 at 20:33:10 UTC 
 * Modify at your own risk.
 */

package com.example.agriexpensett.translogendpoint;

/**
 * Service definition for Translogendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TranslogendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Translogendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the translogendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myapp.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "translogendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Translogendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Translogendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getTransLog".
   *
   * This request holds the parameters needed by the the translogendpoint server.  After setting any
   * optional parameters, call the {@link GetTransLog#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetTransLog getTransLog(java.lang.Long id) throws java.io.IOException {
    GetTransLog result = new GetTransLog(id);
    initialize(result);
    return result;
  }

  public class GetTransLog extends TranslogendpointRequest<com.example.agriexpensett.translogendpoint.model.TransLog> {

    private static final String REST_PATH = "translog/{id}";

    /**
     * Create a request for the method "getTransLog".
     *
     * This request holds the parameters needed by the the translogendpoint server.  After setting any
     * optional parameters, call the {@link GetTransLog#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetTransLog#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetTransLog(java.lang.Long id) {
      super(Translogendpoint.this, "GET", REST_PATH, null, com.example.agriexpensett.translogendpoint.model.TransLog.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTransLog setAlt(java.lang.String alt) {
      return (GetTransLog) super.setAlt(alt);
    }

    @Override
    public GetTransLog setFields(java.lang.String fields) {
      return (GetTransLog) super.setFields(fields);
    }

    @Override
    public GetTransLog setKey(java.lang.String key) {
      return (GetTransLog) super.setKey(key);
    }

    @Override
    public GetTransLog setOauthToken(java.lang.String oauthToken) {
      return (GetTransLog) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTransLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTransLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTransLog setQuotaUser(java.lang.String quotaUser) {
      return (GetTransLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTransLog setUserIp(java.lang.String userIp) {
      return (GetTransLog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetTransLog setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetTransLog set(String parameterName, Object value) {
      return (GetTransLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertTransLog".
   *
   * This request holds the parameters needed by the the translogendpoint server.  After setting any
   * optional parameters, call the {@link InsertTransLog#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.example.agriexpensett.translogendpoint.model.TransLog}
   * @return the request
   */
  public InsertTransLog insertTransLog(com.example.agriexpensett.translogendpoint.model.TransLog content) throws java.io.IOException {
    InsertTransLog result = new InsertTransLog(content);
    initialize(result);
    return result;
  }

  public class InsertTransLog extends TranslogendpointRequest<com.example.agriexpensett.translogendpoint.model.TransLog> {

    private static final String REST_PATH = "translog";

    /**
     * Create a request for the method "insertTransLog".
     *
     * This request holds the parameters needed by the the translogendpoint server.  After setting any
     * optional parameters, call the {@link InsertTransLog#execute()} method to invoke the remote
     * operation. <p> {@link InsertTransLog#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.example.agriexpensett.translogendpoint.model.TransLog}
     * @since 1.13
     */
    protected InsertTransLog(com.example.agriexpensett.translogendpoint.model.TransLog content) {
      super(Translogendpoint.this, "POST", REST_PATH, content, com.example.agriexpensett.translogendpoint.model.TransLog.class);
    }

    @Override
    public InsertTransLog setAlt(java.lang.String alt) {
      return (InsertTransLog) super.setAlt(alt);
    }

    @Override
    public InsertTransLog setFields(java.lang.String fields) {
      return (InsertTransLog) super.setFields(fields);
    }

    @Override
    public InsertTransLog setKey(java.lang.String key) {
      return (InsertTransLog) super.setKey(key);
    }

    @Override
    public InsertTransLog setOauthToken(java.lang.String oauthToken) {
      return (InsertTransLog) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertTransLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertTransLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertTransLog setQuotaUser(java.lang.String quotaUser) {
      return (InsertTransLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertTransLog setUserIp(java.lang.String userIp) {
      return (InsertTransLog) super.setUserIp(userIp);
    }

    @Override
    public InsertTransLog set(String parameterName, Object value) {
      return (InsertTransLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTransLog".
   *
   * This request holds the parameters needed by the the translogendpoint server.  After setting any
   * optional parameters, call the {@link ListTransLog#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListTransLog listTransLog() throws java.io.IOException {
    ListTransLog result = new ListTransLog();
    initialize(result);
    return result;
  }

  public class ListTransLog extends TranslogendpointRequest<com.example.agriexpensett.translogendpoint.model.CollectionResponseTransLog> {

    private static final String REST_PATH = "translog";

    /**
     * Create a request for the method "listTransLog".
     *
     * This request holds the parameters needed by the the translogendpoint server.  After setting any
     * optional parameters, call the {@link ListTransLog#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListTransLog#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListTransLog() {
      super(Translogendpoint.this, "GET", REST_PATH, null, com.example.agriexpensett.translogendpoint.model.CollectionResponseTransLog.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTransLog setAlt(java.lang.String alt) {
      return (ListTransLog) super.setAlt(alt);
    }

    @Override
    public ListTransLog setFields(java.lang.String fields) {
      return (ListTransLog) super.setFields(fields);
    }

    @Override
    public ListTransLog setKey(java.lang.String key) {
      return (ListTransLog) super.setKey(key);
    }

    @Override
    public ListTransLog setOauthToken(java.lang.String oauthToken) {
      return (ListTransLog) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTransLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTransLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTransLog setQuotaUser(java.lang.String quotaUser) {
      return (ListTransLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTransLog setUserIp(java.lang.String userIp) {
      return (ListTransLog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListTransLog setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListTransLog setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListTransLog set(String parameterName, Object value) {
      return (ListTransLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "logs".
   *
   * This request holds the parameters needed by the the translogendpoint server.  After setting any
   * optional parameters, call the {@link Logs#execute()} method to invoke the remote operation.
   *
   * @param time
   * @return the request
   */
  public Logs logs(java.lang.Long time) throws java.io.IOException {
    Logs result = new Logs(time);
    initialize(result);
    return result;
  }

  public class Logs extends TranslogendpointRequest<com.example.agriexpensett.translogendpoint.model.TransLogCollection> {

    private static final String REST_PATH = "Logs/{time}";

    /**
     * Create a request for the method "logs".
     *
     * This request holds the parameters needed by the the translogendpoint server.  After setting any
     * optional parameters, call the {@link Logs#execute()} method to invoke the remote operation. <p>
     * {@link Logs#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param time
     * @since 1.13
     */
    protected Logs(java.lang.Long time) {
      super(Translogendpoint.this, "POST", REST_PATH, null, com.example.agriexpensett.translogendpoint.model.TransLogCollection.class);
      this.time = com.google.api.client.util.Preconditions.checkNotNull(time, "Required parameter time must be specified.");
    }

    @Override
    public Logs setAlt(java.lang.String alt) {
      return (Logs) super.setAlt(alt);
    }

    @Override
    public Logs setFields(java.lang.String fields) {
      return (Logs) super.setFields(fields);
    }

    @Override
    public Logs setKey(java.lang.String key) {
      return (Logs) super.setKey(key);
    }

    @Override
    public Logs setOauthToken(java.lang.String oauthToken) {
      return (Logs) super.setOauthToken(oauthToken);
    }

    @Override
    public Logs setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Logs) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Logs setQuotaUser(java.lang.String quotaUser) {
      return (Logs) super.setQuotaUser(quotaUser);
    }

    @Override
    public Logs setUserIp(java.lang.String userIp) {
      return (Logs) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long time;

    /**

     */
    public java.lang.Long getTime() {
      return time;
    }

    public Logs setTime(java.lang.Long time) {
      this.time = time;
      return this;
    }

    @Override
    public Logs set(String parameterName, Object value) {
      return (Logs) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeTransLog".
   *
   * This request holds the parameters needed by the the translogendpoint server.  After setting any
   * optional parameters, call the {@link RemoveTransLog#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveTransLog removeTransLog(java.lang.Long id) throws java.io.IOException {
    RemoveTransLog result = new RemoveTransLog(id);
    initialize(result);
    return result;
  }

  public class RemoveTransLog extends TranslogendpointRequest<Void> {

    private static final String REST_PATH = "translog/{id}";

    /**
     * Create a request for the method "removeTransLog".
     *
     * This request holds the parameters needed by the the translogendpoint server.  After setting any
     * optional parameters, call the {@link RemoveTransLog#execute()} method to invoke the remote
     * operation. <p> {@link RemoveTransLog#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveTransLog(java.lang.Long id) {
      super(Translogendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveTransLog setAlt(java.lang.String alt) {
      return (RemoveTransLog) super.setAlt(alt);
    }

    @Override
    public RemoveTransLog setFields(java.lang.String fields) {
      return (RemoveTransLog) super.setFields(fields);
    }

    @Override
    public RemoveTransLog setKey(java.lang.String key) {
      return (RemoveTransLog) super.setKey(key);
    }

    @Override
    public RemoveTransLog setOauthToken(java.lang.String oauthToken) {
      return (RemoveTransLog) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveTransLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveTransLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveTransLog setQuotaUser(java.lang.String quotaUser) {
      return (RemoveTransLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveTransLog setUserIp(java.lang.String userIp) {
      return (RemoveTransLog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveTransLog setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveTransLog set(String parameterName, Object value) {
      return (RemoveTransLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTransLog".
   *
   * This request holds the parameters needed by the the translogendpoint server.  After setting any
   * optional parameters, call the {@link UpdateTransLog#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.example.agriexpensett.translogendpoint.model.TransLog}
   * @return the request
   */
  public UpdateTransLog updateTransLog(com.example.agriexpensett.translogendpoint.model.TransLog content) throws java.io.IOException {
    UpdateTransLog result = new UpdateTransLog(content);
    initialize(result);
    return result;
  }

  public class UpdateTransLog extends TranslogendpointRequest<com.example.agriexpensett.translogendpoint.model.TransLog> {

    private static final String REST_PATH = "translog";

    /**
     * Create a request for the method "updateTransLog".
     *
     * This request holds the parameters needed by the the translogendpoint server.  After setting any
     * optional parameters, call the {@link UpdateTransLog#execute()} method to invoke the remote
     * operation. <p> {@link UpdateTransLog#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.example.agriexpensett.translogendpoint.model.TransLog}
     * @since 1.13
     */
    protected UpdateTransLog(com.example.agriexpensett.translogendpoint.model.TransLog content) {
      super(Translogendpoint.this, "PUT", REST_PATH, content, com.example.agriexpensett.translogendpoint.model.TransLog.class);
    }

    @Override
    public UpdateTransLog setAlt(java.lang.String alt) {
      return (UpdateTransLog) super.setAlt(alt);
    }

    @Override
    public UpdateTransLog setFields(java.lang.String fields) {
      return (UpdateTransLog) super.setFields(fields);
    }

    @Override
    public UpdateTransLog setKey(java.lang.String key) {
      return (UpdateTransLog) super.setKey(key);
    }

    @Override
    public UpdateTransLog setOauthToken(java.lang.String oauthToken) {
      return (UpdateTransLog) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTransLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTransLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTransLog setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTransLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTransLog setUserIp(java.lang.String userIp) {
      return (UpdateTransLog) super.setUserIp(userIp);
    }

    @Override
    public UpdateTransLog set(String parameterName, Object value) {
      return (UpdateTransLog) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Translogendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Translogendpoint}. */
    @Override
    public Translogendpoint build() {
      return new Translogendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TranslogendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTranslogendpointRequestInitializer(
        TranslogendpointRequestInitializer translogendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(translogendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
